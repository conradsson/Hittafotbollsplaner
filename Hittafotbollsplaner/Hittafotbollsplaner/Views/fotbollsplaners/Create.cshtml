@model Hittafotbollsplaner.Models.fotbollsplaner

@{
    ViewBag.Title = "Lägg till fotbollsplan";
}

<script>
    $("#hideNav").click(function () {
        $(".navbar").toggle();
    });
</script>

<div class="row ontoppageNyplan content">
    <div class="panel-body body-nyplan">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4 style="text-align: center;">Lägg till fotbollsplan</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger", required = "required" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Namn, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" >
                        @Html.EditorFor(model => model.Namn, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Namn, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Ort, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Ort, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Ort, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Postnummer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Postnummer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Postnummer, "", new { @class = "text-danger" })
                    </div>
                </div>
                    @{
                        List<SelectListItem> listItems = new List<SelectListItem>();
                        listItems.Add(new SelectListItem
                        {
                            Text = "Gräs",
                            Value = "Gräs"
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "Grus",
                            Value = "Grus",
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "Konstgräs",
                            Value = "Konstgräs",
                        });
                    }
                <div class="form-group">
                    @Html.LabelFor(model => model.Underlag, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Underlag, listItems, null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Underlag, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div id="lat"class="form-group">
                    @Html.LabelFor(model => model.Latitud, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Latitud, new { htmlAttributes = new { @class = "form-control", @id = "lat1" } })
                        @Html.ValidationMessageFor(model => model.Latitud, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div id="long" class="form-group">
                    @Html.LabelFor(model => model.Longitud, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Longitud, new { htmlAttributes = new { @class = "form-control", @id = "long1" } })
                        @Html.ValidationMessageFor(model => model.Longitud, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <label class="control-label col-md-9" for="Karta">Markera vart på kartan fotbollsplanen ligger  </label>
                        <div id="googleMap" style="width:100%;height:300px;"></div>
                        <script>
                            var oldMarker;
                            var marker;

                    function myMap() {
                        var myCenter = new google.maps.LatLng(63.176683, 14.636068);
                        var mapCanvas = document.getElementById("googleMap");
                        var mapOptions = { center: myCenter, zoom: 4 };
                        var map = new google.maps.Map(mapCanvas, mapOptions);
                        var icon = {
                            url: "/Content/img/marker.png", // url
                            scaledSize: new google.maps.Size(32, 50), // scaled size
                            origin: new google.maps.Point(0,0), // origin
                            anchor: new google.maps.Point(20, 50) // anchor
                        };
                        google.maps.event.addListener(map, 'click', function (event) {
                            placeMarker(event.latLng);
                            var position = marker.getPosition();
                            var latitude = position.lat();
                            var longitude = position.lng();

                            $('#lat1').val(latitude);
                            $('#long1').val(longitude);
                        });
                        function placeMarker(location) {
                                marker = new google.maps.Marker({
                                position: location,
                                icon: icon,
                                map: map
                            });

                            if (oldMarker != undefined) {
                                oldMarker.setMap(null);
                            }
                            oldMarker = marker;
                            map.setCenter(location);
                        }
                    }
                        </script>
                    </div>
                </div>
                @{
                    List<SelectListItem> antalPlaner = new List<SelectListItem>();
                    antalPlaner.Add(new SelectListItem
                    {
                        Text = "0",
                        Value = "0"
                    });
                    antalPlaner.Add(new SelectListItem
                    {
                        Text = "1",
                        Value = "1",
                    });
                    antalPlaner.Add(new SelectListItem
                    {
                        Text = "2",
                        Value = "2",
                    });
                    antalPlaner.Add(new SelectListItem
                    {
                        Text = "3",
                        Value = "3",
                    });
                    antalPlaner.Add(new SelectListItem
                    {
                        Text = "4",
                        Value = "4",
                    });
                    antalPlaner.Add(new SelectListItem
                    {
                        Text = "5",
                        Value = "5",
                    });
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.AntalGras, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.AntalGras, antalPlaner, null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AntalGras, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.AntalGrus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.AntalGrus, antalPlaner, null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AntalGrus, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.AntalKonstGras, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.AntalKonstGras, antalPlaner, null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AntalKonstGras, "", new { @class = "text-danger" })
                    </div>
                </div>
                    @{
                        List<SelectListItem> jaNej = new List<SelectListItem>();
                        jaNej.Add(new SelectListItem
                        {
                            Text = "Ja",
                            Value = "True"
                        });
                        jaNej.Add(new SelectListItem
                        {
                            Text = "Nej",
                            Value = "False",
                        });
                    }
                <div class="form-group">
                    @Html.LabelFor(model => model.Parkering, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Parkering, jaNej, null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Parkering, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Omkladnadsrum, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Omkladnadsrum, jaNej, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Omkladnadsrum, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Kafe, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Kafe, jaNej, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Kafe, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Restaurang, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Restaurang, jaNej, null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Restaurang, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Upplyst, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Upplyst, jaNej, null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Upplyst, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Bokning, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Bokning, jaNej, null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Bokning, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Hemsida, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Hemsida, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Hemsida, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-5 col-md-7" >
                       <input type="submit" id="läggtillFP" value="Lägg till" class="btn btn-default"/>
                    </div>
                </div>
                @if (@ViewBag.SuccessConfirm != null)
                {
                    @Html.Partial("_SuccessConfirmation")
                }
            </div>

        }



        @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
    </div>
</div>


<script src="http://maps.google.com/maps/api/js?sensor=false" type="text/javascript"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBdYS_UAzWfdbIIbydr7rIwpvqtKCUUEBY&callback=myMap"></script>
