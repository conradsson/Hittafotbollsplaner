@model Hittafotbollsplaner.Models.fotbollsplaner

@{
    ViewBag.Title = "Ny fotbollsplan";
}
<br />
<br />
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">Lägg till ny fotbollsplan</h3>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4 style="text-align: center;">Ny fotbollsplan</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger", required = "required" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Namn, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" >
                        @Html.EditorFor(model => model.Namn, new { htmlAttributes = new {  @class = "form-control"} })
                        @Html.ValidationMessageFor(model => model.Namn, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control"} })
                        @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Ort, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Ort, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Ort, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Postnummer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Postnummer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Postnummer, "", new { @class = "text-danger" })
                    </div>
                </div>
@{
    List<SelectListItem> listItems = new List<SelectListItem>();
                        listItems.Add(new SelectListItem
    {
        Text = "Gräs",
        Value = "Gräs"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Grus",
        Value = "Grus",
    });
    listItems.Add(new SelectListItem
    {
        Text = "Konstgräs",
        Value = "Konstgräs",
    });
}
                <div class="form-group">
                    @Html.LabelFor(model => model.Underlag, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Underlag, listItems, null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Underlag, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                       <input type="submit" id="läggtillFP" value="Lägg till" class="btn btn-default"/>
                    </div>
                </div>
                @if (@ViewBag.SuccessConfirm != null)
                {
                    @Html.Partial("_SuccessConfirmation")
                }
            </div>

        }



        @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
    </div>
</div>