@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Hittafotbollsplaner - Sidan som hittar fotbollsplaner";
    @model Hittafotbollsplaner.Models.FotbollsplanerModels
}
<link rel="stylesheet" href="http://code.jquery.com/ui/1.9.1/themes/smoothness/jquery-ui.css" />
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<link rel="stylesheet" href="path/to/font-awesome/css/font-awesome.min.css">



<script>
    $(document).ready(function () {
        $("#sökinput").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Home/GetAutoCompleteData",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.Namn, value: item.Adress
                            }
                        }))
                    },
                    messages: {
                        noResults: "", results: ""
                    }
                });
            }
        });
    });
</script>


@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()

        <ul class="nav navbar-nav navbar-right">
            <li>
                @Html.ActionLink("Inloggad: " + User.Identity.GetUserName(), "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })
            </li>
            <li>
                @Html.ActionLink("Logga ut", "LoggaUt", "Account"@*, routeValues: null, htmlAttributes: new { id = "logoutForm" }*@)</li>
            <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
        </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}

<div class="sa pull-right"><a href="/login">Admin</a></div>


    <div class="sökDiv text-center">
        <span class="glyphicon glyphicon-question-sign pull-right hjalpKnapp" aria-hidden="true" style="margin-right:2%; "><span class="hjalpText">Sök efter fotbollsplaner genom att ange adress eller namnet på fotbollsplanen i sökfältet. Resultatet visas här på kartan nedan.<br /><br />Använd gärna lokaliseringsknappen höger i sökfältet för att enkelt hitta din position.</span></span>

        <a href="../"><img id="logo" src="/Content/img/hfpLogotype.png"></a>
        <div class="input-group">
            <input id="sökinput" type="text" class="form-control controls" placeholder="Sök på adress eller namn..">
            <span id="getPos" class="input-group-addon" onclick="scrollTo('.kartDiv',2000)" title="Hitta min position"><img src="~/Content/img/loc.png" /></span>
        </div>

        <div class="mini-nav">
            <ul>
                <li>@Html.ActionLink("Lägg till fotbollsplan", "Create", "fotbollsplaners")</li>
                <li>@Html.ActionLink("Om oss", "Om", "Home")</li>
                <li>@Html.ActionLink("Kontakt", "Kontakt", "Home")</li>
            </ul>
        </div>

    </div>


    <div class="kartDiv ontoplook">
        <div id="googleMap" style="width:100%;height:inherit;"></div>
        @using (Html.BeginForm("Index", "Home"))
        {
            <script>
                var currpos;

                function myMap() {
                    var myCenter = new google.maps.LatLng(61.5376, 15.5063);
                    var mapCanvas = document.getElementById("googleMap");
                    var mapOptions = {
                        center: myCenter,
                        zoom: 5,
                        minZoom: 5,
                        mapTypeId: google.maps.MapTypeId.TERRAIN,
                        styles: [
    {
        "featureType": "administrative.country",
        "elementType": "geometry.stroke",
        "stylers": [
          {
              "lightness": -65
          }
        ]
    },
    {
        "featureType": "administrative.province",
        "elementType": "geometry.stroke",
        "stylers": [
          {
              "lightness": -75
          }
        ]
    },
    {
        "featureType": "landscape.natural",
        "elementType": "geometry.fill",
        "stylers": [
          {
              "color": "#ffffff"
          }
        ]
    },
    {
        "featureType": "landscape.natural",
        "elementType": "geometry.stroke",
        "stylers": [
          {
              "color": "#00ff40"
          }
        ]
    },
    {
        "featureType": "landscape.natural.terrain",
        "elementType": "geometry.fill",
        "stylers": [
          {
              "lightness": -15
          }
        ]
    },
    {
        "featureType": "road.arterial",
        "elementType": "geometry.fill",
        "stylers": [
          {
              "lightness": -35
          }
        ]
    },
    {
        "featureType": "road.arterial",
        "elementType": "labels",
        "stylers": [
          {
              "visibility": "off"
          }
        ]
    },
    {
        "featureType": "road.highway",
        "elementType": "geometry.fill",
        "stylers": [
          {
              "color": "#8f8f8f"
          },
          {
              "lightness": -30
          },
          {
              "visibility": "off"
          }
        ]
    },
    {
        "featureType": "road.highway",
        "elementType": "geometry.stroke",
        "stylers": [
          {
              "color": "#a6a6a6"
          }
        ]
    },
    {
        "featureType": "road.highway",
        "elementType": "labels",
        "stylers": [
          {
              "visibility": "off"
          }
        ]
    },
    {
        "featureType": "road.local",
        "stylers": [
          {
              "visibility": "off"
          }
        ]
    },
    {
        "featureType": "water",
        "elementType": "geometry",
        "stylers": [
          {
              "lightness": -40
          }
        ]
    },
    {
        "featureType": "water",
        "elementType": "geometry.fill",
        "stylers": [
          {
              "lightness": 55
          }
        ]
    }
                        ]
                    };
                    var map = new google.maps.Map(mapCanvas, mapOptions);
                    var icon = {
                        url: "/Content/img/marker2.png", // url
                        scaledSize: new google.maps.Size(38, 56), // scaled size
                        origin: new google.maps.Point(0, 0), // origin
                        anchor:
                        new google.maps.Point(26, 56) // anchor
                    };



                    var markers = [];
                    @foreach (var item in Model.AllaFotbollsplaner)
                                            {
                                                <text>
                    var myCenter = new google.maps.LatLng(@item.Latitud, @item.Longitud);
                    var marker = new google.maps.Marker({
                        position: myCenter,
                        icon: icon
                    });
                    markers.push(marker)
                    //marker.setMap(map);
                    addInfoWindow(marker, "<b>@item.Namn</b><br>@item.Adress<br>@item.Postnummer @item.Ort<br><br><a id=merInfoA href=@Url.Action("Planid", "Fotbollsplan", new { id = item.Id })><li id=merInfo>Mer information</li></a>");

                    </text>
                                            }


                    mcOptions = {
                        styles: [{
                            height: 77,
                            url: "../Content/img/cluster.png",
                            textSize: 15,
                            width: 78
                        }]
                    }
                    var markerCluster = new MarkerClusterer(map, markers, mcOptions);

                    function addInfoWindow(marker, message) {
                        var infoWindow = new google.maps.InfoWindow({
                            content: message
                        });
                        google.maps.event.addListener(marker, 'click', function () {
                            infoWindow.open(map, marker);
                        });
                    }

                    /*   CONTEXT MENU   */
                    //var geocoder = new google.maps.Geocoder();

                    //google.maps.event.addListener(map, 'rightclick', function(event) {
                    //    map.panTo(event.latLng);
                    //    map.setMapTypeId('hybrid');
                    //    showContextMenu(event.latLng);
                    //    geocoder.geocode({
                    //        'latLng': event.latLng
                    //    }, function(results, status) {
                    //        if (status == google.maps.GeocoderStatus.OK) {
                    //            if (results[0]) {
                    //                currpos = event.latLng;
                    //                $('#latLngInput').val(currpos);

                    //                map.addListener('center_changed', function() {
                    //                    $('.contextmenu').hide();
                    //                });

                    //                $("#startläggtill").click(function () {
                    //                    startläggtill();
                    //                });


                    //            }
                    //        }
                    //    });
                    //});



                    //function startläggtill() {

                    //    var latlon = $('#latLngInput').val();

                    //    if (latlon != "") {

                    //        $.ajax({
                    //            url: '/fotbollsplaners/RightClickMapLink',
                    //            contentType: 'application/html; charset=utf-8',
                    //            data: { latlon },
                    //            type: 'GET',
                    //            dataType: 'html',
                    //            success: function (result) {
                    //                window.location.href = "/fotbollsplaners/Create";
                    //            }
                    //        })
                    //    }
                    //    else {
                    //        alert('Inga koordinater på denna plats');
                    //    }
                    //}


                    //function showContextMenu(caurrentLatLng  ) {
                    //    var projection;
                    //    var contextmenuDir;
                    //    projection = map.getProjection() ;
                    //    $('.contextmenu').remove();
                    //    contextmenuDir = document.createElement("div");
                    //    contextmenuDir.className  = 'contextmenu';
                    //    contextmenuDir.innerHTML = '<div class="context"><div class="menudot"></div><span id="startläggtilltext">Finns det en <br/> fotbollsplan här?<li id="startläggtill">Lägg till fotbollsplan</li></span><input type="text" id="latLngInput"></div>';

                    //    $(map.getDiv()).append(contextmenuDir);

                    //    setMenuXY(caurrentLatLng);

                    //    contextmenuDir.style.visibility = "visible";
                    //}

                    //function getCanvasXY(caurrentLatLng){
                    //    var scale = Math.pow(2, map.getZoom());
                    //    var nw = new google.maps.LatLng(
                    //        map.getBounds().getNorthEast().lat(),
                    //        map.getBounds().getSouthWest().lng()
                    //    );
                    //    var worldCoordinateNW = map.getProjection().fromLatLngToPoint(nw);
                    //    var worldCoordinate = map.getProjection().fromLatLngToPoint(caurrentLatLng);
                    //    var caurrentLatLngOffset = new google.maps.Point(
                    //        Math.floor((worldCoordinate.x - worldCoordinateNW.x) * scale),
                    //        Math.floor((worldCoordinate.y - worldCoordinateNW.y) * scale)
                    //    );
                    //    return caurrentLatLngOffset;
                    //}

                    //function setMenuXY(caurrentLatLng){
                    //    var mapWidth = $('#map_canvas').width();
                    //    var mapHeight = $('#map_canvas').height();
                    //    var menuWidth = $('.contextmenu').width();
                    //    var menuHeight = $('.contextmenu').height();
                    //    var clickedPosition = getCanvasXY(caurrentLatLng);
                    //    var x = clickedPosition.x ;
                    //    var y = clickedPosition.y ;

                    //    if((mapWidth - x ) < menuWidth)
                    //        x = x - menuWidth;
                    //    if((mapHeight - y ) < menuHeight)
                    //        y = y - menuHeight;

                    //    $('.contextmenu').css('left',x  );
                    //    $('.contextmenu').css('top',y );
                    //};
                    /*   CONTEXT MENU END  */


                    var options = {
                        componentRestrictions: {country: "swe"}
                    };

                    var card = document.getElementById('input-group');
                    var input = document.getElementById('sökinput');

                    map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);

                    var autocomplete = new google.maps.places.Autocomplete(input, options);

                    // HITTA POSTION
                    $("span#getPos").click(function () {

                        var myloc = new google.maps.Marker({
                            clickable: false,
                            icon: new google.maps.MarkerImage('//maps.gstatic.com/mapfiles/mobile/mobileimgs2.png',
                            new google.maps.Size(22,22),
                            new google.maps.Point(0,18),
                            new google.maps.Point(11,11)),
                            shadow: null,
                            zIndex: 999999,
                            map: map
                        });

                        if (navigator.geolocation) navigator.geolocation.getCurrentPosition(function(pos) {
                            var me = new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude);
                            myloc.setPosition(me);
                            map.panTo(me);
                            map.setZoom(14);

                        }, function(error) {
                            // ...
                        });



                    });


                    // Bind the map's bounds (viewport) property to the autocomplete object,
                    // so that the autocomplete requests use the current map bounds for the
                    // bounds option in the request.
                    autocomplete.bindTo('bounds', map);

                    var infowindow = new google.maps.InfoWindow();
                    var infowindowContent = document.getElementById('infowindow-content');
                    infowindow.setContent(infowindowContent);
                    var marker1 = new google.maps.Marker({
                        map: map,
                        anchorPoint: new google.maps.Point(0, -29),
                        animation:google.maps.Animation.BOUNCE
                    });
                    autocomplete.addListener('place_changed', function() {
                        infowindow.close();
                        var place = autocomplete.getPlace();
                        if (!place.geometry) {
                            // User entered the name of a Place that was not suggested and
                            // pressed the Enter key, or the Place Details request failed.
                            //window.alert("Ingen adress fanns med namnet: '" + place.name + "'");
                            return;
                        }
                        // If the place has a geometry, then present it on a map.
                        if (place.geometry.viewport) {
                            map.fitBounds(place.geometry.viewport);
                        } else {
                            map.setCenter(place.geometry.location);
                            map.setZoom(17);  // Why 17? Because it looks good.
                        }
                        marker1.setPosition(place.geometry.location);
                        marker1.setVisible(true);


                        var address = '';
                        if (place.address_components) {
                            address = [
                              (place.address_components[0] && place.address_components[0].short_name || ''),
                              (place.address_components[1] && place.address_components[1].short_name || ''),
                              (place.address_components[2] && place.address_components[2].short_name || '')
                            ].join(' ');
                        }
                        infowindowContent.children['place-icon'].src = place.icon;
                        infowindowContent.children['place-name'].textContent = place.name;
                        infowindowContent.children['place-address'].textContent = address;
                        infowindow.open(map, marker1);
                    });

                    @*setTimeout(function(){

                              @foreach (var item in Model.AllaFotbollsplaner)
                    {
                        <text>

                    $(".pac-container").append('<div class="pac-item"><span class="fa fa-futbol-o"></span>&nbsp;&nbsp;&nbsp;<span class="pac-item-query"><span class="pac-matched"></span>@item.Namn</span> <span>@item.Adress,  @item.Ort</span></div>');

                        </text>
                    }

                }, 500);
                searchBoxMapAddress();*@


                    // Sets a listener on a radio button to change the filter type on Places
                    // Autocomplete.
                    function setupClickListener(id, types) {
                        var radioButton = document.getElementById(id);
                        radioButton.addEventListener('click', function() {
                            autocomplete.setTypes(types);
                        });
                    }
                    setupClickListener('changetype-all', []);
                    setupClickListener('changetype-address', ['address']);
                    setupClickListener('changetype-establishment', ['establishment']);
                    setupClickListener('changetype-geocode', ['geocode']);
                }
            </script>
        }

    </div>

    @*<div class="row ontoppageStart">
            <div class="col-md-offset-3 col-md-3">
                <h3>Populära</h3>
                <div class="list-group">

                    @using (Html.BeginForm("Index", "Home"))
                    {
                        foreach (var item in Model.fotbollsplaner) // RADAR UPP FOTBOLLSPLANERS NAMN I "SENAST"
                        {
                            <a class="list-group-item list-group-item" href="@Url.Action("AktuellFotbollsplan", "Fotbollsplan", new { id = item.Id })"><li>@item.Namn</li></a>
                        }
                    }
                </div>
            </div>
            <div class="col-md-3">
                <h3>Nyligen tillagda</h3>
                <div class="list-group">

                    @using (Html.BeginForm("Index", "Home"))
                    {
                        foreach (var item in Model.senasteFotbollsplaner) // RADAR UPP FOTBOLLSPLANERS NAMN I "SENAST"
                        {
                            <a class="list-group-item list-group-item" href="@Url.Action("AktuellFotbollsplan", "Fotbollsplan", new { id = item.Id })"><li>@item.Namn</li></a>
                        }
                    }
                </div>
            </div>
            <div class="col-md-3"></div>
        </div>*@


    <script src="http://maps.google.com/maps/api/js?sensor=false" type="text/javascript"></script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBdYS_UAzWfdbIIbydr7rIwpvqtKCUUEBY&language=sv&callback=myMap&libraries=places"></script>


