@{
    ViewBag.Title = "Sök efter fotbollsplaner";
    @model Hittafotbollsplaner.Models.FotbollsplanerModels
}
<link rel="stylesheet" href="http://code.jquery.com/ui/1.9.1/themes/smoothness/jquery-ui.css" />
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<link rel="stylesheet" href="path/to/font-awesome/css/font-awesome.min.css">


<script>
    $(document).ready(function () {
        $("#sökinput").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Home/GetAutoCompleteData",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.Namn, value: item.Adress
                            }
                        }))
                    },
                    messages: {
                        noResults: "", results: ""
                    }
                });
            }
        });
    });
</script>





<div class="sökDiv text-center">
    <a class="menu-bar" data-toggle="collapse" href="#menu">
        <span class="bars"></span>
    </a>
    <a href="~/Home/Index"><img id="logo" src="/Content/img/hfpLogotype.png" style="width: 200px; height: 80px;"></a>
    <div class="input-group" >
        <input id="sökinput" type="text" class="form-control controls" placeholder="Sök på adress eller namn..">
        <div class="input-group-btn">
            <button type="button" class="btn btn-default" onclick="geolocate()"><i class="material-icons">my_location</i></button>
            @*<button type="button" class="btn btn-default"><i class="material-icons">search</i></button>*@
        </div>
    </div>

    <div class="mini-nav">
        <ul>
            <li>@Html.ActionLink("Lägg till fotbollsplan", "Create", "fotbollsplaners")</li>
            <li>@Html.ActionLink("Om oss", "Om", "Home")</li>
            <li>@Html.ActionLink("Kontakt", "Kontakt", "Home")</li>
        </ul>
    </div>

</div>


<div class="kartDiv ontoplook">
        <div id="googleMap" style="width:100%;height:inherit;"></div>
    @using (Html.BeginForm("Index", "Home"))
    {
        <script>
                                        function myMap() {
                                            var myCenter = new google.maps.LatLng(61.5376, 15.5063);
                                            var mapCanvas = document.getElementById("googleMap");
                                            var mapOptions = {
                                                center: myCenter,
                                                zoom: 5,
                                                minZoom: 5,
                                                styles: [
  {
      "featureType": "administrative.country",
      "elementType": "geometry.stroke",
      "stylers": [
        {
            "lightness": -65
        }
      ]
  },
  {
      "featureType": "administrative.province",
      "elementType": "geometry.stroke",
      "stylers": [
        {
            "lightness": -75
        }
      ]
  },
  {
      "featureType": "landscape.natural",
      "elementType": "geometry.fill",
      "stylers": [
        {
            "color": "#ffffff"
        }
      ]
  },
  {
      "featureType": "landscape.natural",
      "elementType": "geometry.stroke",
      "stylers": [
        {
            "color": "#00ff40"
        }
      ]
  },
  {
      "featureType": "landscape.natural.terrain",
      "elementType": "geometry.fill",
      "stylers": [
        {
            "lightness": -15
        }
      ]
  },
  {
      "featureType": "road.arterial",
      "elementType": "geometry.fill",
      "stylers": [
        {
            "lightness": -35
        }
      ]
  },
  {
      "featureType": "road.arterial",
      "elementType": "labels",
      "stylers": [
        {
            "visibility": "off"
        }
      ]
  },
  {
      "featureType": "road.highway",
      "elementType": "geometry.fill",
      "stylers": [
        {
            "color": "#8f8f8f"
        },
        {
            "lightness": -30
        },
        {
            "visibility": "off"
        }
      ]
  },
  {
      "featureType": "road.highway",
      "elementType": "geometry.stroke",
      "stylers": [
        {
            "color": "#a6a6a6"
        }
      ]
  },
  {
      "featureType": "road.highway",
      "elementType": "labels",
      "stylers": [
        {
            "visibility": "off"
        }
      ]
  },
  {
      "featureType": "road.local",
      "stylers": [
        {
            "visibility": "off"
        }
      ]
  },
  {
      "featureType": "water",
      "elementType": "geometry",
      "stylers": [
        {
            "lightness": -40
        }
      ]
  },
  {
      "featureType": "water",
      "elementType": "geometry.fill",
      "stylers": [
        {
            "lightness": 55
        }
      ]
  }
                                                ]
                                            };
                                            var map = new google.maps.Map(mapCanvas, mapOptions);
                                            var icon = {
                                                url: "/Content/img/marker.png", // url
                                                scaledSize: new google.maps.Size(32, 50), // scaled size
                                                origin: new google.maps.Point(0, 0), // origin
                                                anchor:
                                                new google.maps.Point(20, 50) // anchor
                                            };

                                            @foreach (var item in Model.AllaFotbollsplaner)
                                            {
                                                <text>
                                             var myCenter = new google.maps.LatLng(@item.Latitud, @item.Longitud);
                                                var marker = new google.maps.Marker({
                                                    position: myCenter,
                                                    icon: icon
                                                });
                                                marker.setMap(map);
                                                addInfoWindow(marker, "<b>@item.Namn</b><br>@item.Adress<br>@item.Postnummer @item.Ort<br><br><a id=merInfoA href=@Url.Action("AktuellFotbollsplan", "Fotbollsplan", new { id = item.Id })><li id=merInfo>Mer information</li></a>");
                                                </text>
                                            }

                                            function addInfoWindow(marker, message) {
                                                var infoWindow = new google.maps.InfoWindow({
                                                    content: message
                                                });
                                                google.maps.event.addListener(marker, 'click', function () {
                                                    infoWindow.open(map, marker);
                                                });
                                            }
                                            var options = {
                                                componentRestrictions: {country: "swe"}
                                            };

                                            var card = document.getElementById('input-group');
                                            var input = document.getElementById('sökinput');

                                            map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);

                                            var autocomplete = new google.maps.places.Autocomplete(input, options);



                                            // Bind the map's bounds (viewport) property to the autocomplete object,
                                            // so that the autocomplete requests use the current map bounds for the
                                            // bounds option in the request.
                                            autocomplete.bindTo('bounds', map);
                                            var infowindow = new google.maps.InfoWindow();
                                            var infowindowContent = document.getElementById('infowindow-content');
                                            infowindow.setContent(infowindowContent);
                                            var marker1 = new google.maps.Marker({
                                                map: map,
                                                anchorPoint: new google.maps.Point(0, -29),
                                                animation:google.maps.Animation.BOUNCE
                                            });
                                            autocomplete.addListener('place_changed', function() {
                                                infowindow.close();
                                                var place = autocomplete.getPlace();
                                                if (!place.geometry) {
                                                    // User entered the name of a Place that was not suggested and
                                                    // pressed the Enter key, or the Place Details request failed.
                                                    window.alert("Ingen adress fanns med namnet: '" + place.name + "'");
                                                    return;
                                                }
                                                // If the place has a geometry, then present it on a map.
                                                if (place.geometry.viewport) {
                                                    map.fitBounds(place.geometry.viewport);
                                                } else {
                                                    map.setCenter(place.geometry.location);
                                                    map.setZoom(17);  // Why 17? Because it looks good.
                                                }
                                                marker1.setPosition(place.geometry.location);
                                                marker1.setVisible(true);

                                                var address = '';
                                                if (place.address_components) {
                                                    address = [
                                                      (place.address_components[0] && place.address_components[0].short_name || ''),
                                                      (place.address_components[1] && place.address_components[1].short_name || ''),
                                                      (place.address_components[2] && place.address_components[2].short_name || '')
                                                    ].join(' ');
                                                }
                                                infowindowContent.children['place-icon'].src = place.icon;
                                                infowindowContent.children['place-name'].textContent = place.name;
                                                infowindowContent.children['place-address'].textContent = address;
                                                infowindow.open(map, marker1);
                                            });
                                            // Sets a listener on a radio button to change the filter type on Places
                                            // Autocomplete.
                                            function setupClickListener(id, types) {
                                                var radioButton = document.getElementById(id);
                                                radioButton.addEventListener('click', function() {
                                                    autocomplete.setTypes(types);
                                                });
                                            }
                                            setupClickListener('changetype-all', []);
                                            setupClickListener('changetype-address', ['address']);
                                            setupClickListener('changetype-establishment', ['establishment']);
                                            setupClickListener('changetype-geocode', ['geocode']);

                                    }
        </script>
    }

</div>

@*<div class="row ontoppageStart">
    <div class="col-md-offset-3 col-md-3">
        <h3>Populära</h3>
        <div class="list-group">

            @using (Html.BeginForm("Index", "Home"))
            {
                foreach (var item in Model.fotbollsplaner) // RADAR UPP FOTBOLLSPLANERS NAMN I "SENAST"
                {
                    <a class="list-group-item list-group-item" href="@Url.Action("AktuellFotbollsplan", "Fotbollsplan", new { id = item.Id })"><li>@item.Namn</li></a>
                }
            }
        </div>
    </div>
    <div class="col-md-3">
        <h3>Nyligen tillagda</h3>
        <div class="list-group">

            @using (Html.BeginForm("Index", "Home"))
            {
                foreach (var item in Model.senasteFotbollsplaner) // RADAR UPP FOTBOLLSPLANERS NAMN I "SENAST"
                {
                    <a class="list-group-item list-group-item" href="@Url.Action("AktuellFotbollsplan", "Fotbollsplan", new { id = item.Id })"><li>@item.Namn</li></a>
                }
            }
        </div>
    </div>
    <div class="col-md-3"></div>
</div>*@

<script src="http://maps.google.com/maps/api/js?sensor=false" type="text/javascript"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBdYS_UAzWfdbIIbydr7rIwpvqtKCUUEBY&callback=myMap&libraries=places"></script>
